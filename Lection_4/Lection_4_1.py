"""
Лекция 4.1.
Общие принципы работы с коллекциями.
Использование срезов (slices).
Списковые выражения (list comprehensions)
"""

# срезы позволяют обрабатывать коллекции с помощью спец выражений в []
lst = [1, 2, 3, 4, 5]  #нумерация элементов начинается с 0
print(lst)
print(lst[0], lst[-1])  # первый и последний элементы
print(lst[1:])  # все элементы с 1 и до 3 не включительно (не включая первый)
print(lst[1:3]) # элементы после первого и до 3 (не включая 3)
print(lst[:2]) # все элементы до второго (не включая второй)

lst2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(lst2[1:8:2])  # элементы с 1 по 8 (не включая 8) c шагом 2

print(lst2[::-1])  # список разворачивается, первый эл-т становится последним

lst3 = lst2   # измения в list2 также изменяют с, так как в lst3 лежит ссылка на list2 и он автоматически меняется при измен list2
lst2.remove(8)
print(lst2)
print(lst3)

lst3 = lst2[::] # копируем список, сохраняя его в отдельной области памяти и измения в list2 не влияют на lst3
lst4 = [*lst2]  # работает также, создаем новый список и через * добавляем в него все эл-ты предыдущего списка

# списковые выражения - это спец выражения в [], кот позволяют изменять списки
lst2_2 = [i * 2 for i in lst2 if i < 4]  # цикл, кот первые 3 элемента списка * 2 и сохран в новый список (здесь нумерация с 1),
                                         # все ост знач будут пропущены и не попадут в новый список
print(lst2_2)

print([i * 2 for i in range(10)])

eng_rus_dict = {
    "cat": "кот",
    "car": "машина"
}

# хотим сделать второй словарь, у которого ключ будет в верхнем регистре, а значение будет первой буквой от изначального
# объявляется словарь, внутри кот есть цикл по items() - парам ключ значение и они попад в переменные k, v
# затем по этим переменным k, v объявляем новый словарь
eng_rus_dict_2 = {
    k.upper() : v[0] for k, v in eng_rus_dict.items()
}
print(eng_rus_dict_2)