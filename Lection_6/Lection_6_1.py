"""
Лекция 6.1.
Области применения, класс решаемых задач.
Написание регулярных выражений
"""

# регулярное выражение - спец строка, в которой содержится некоторый код, позволяющий искать и заменять строки в тескте
# в этом коде опис некот шаблон, там могут быть указаны разничные символы, числа, буквы, спец символы
# в итоге на базе этого кода происходит поиск и замена некот строк в тексте

# regex101.com - среда разработки для регулярных выражений

"""
Добрый вечер! Меня зовут Василий, моя электронная почта vasya@yandex.ry, моя рабочая почта vasya@company.com.
"""

"""
извлекаем отсюда почты
[a-z] = класс символов, кот сост из всех маленьких английских букв от a-z
[A-z] = все английские буквы, и маленькие, и большие
каждая англ буква в тексте выделяется отдельное вхождение, тк этот класс символов содержит одну букву
чтобы показать, что эта буква может повторяться от 1 до какого-то кол-ва раз, нужно добавить +
теперь вхождения сост из целых английсикх слов, зазделенных другими символами
. - любой символ в строке, а вот \. = "."
[a-z]+@[a-z]+\.+[a-z]+
\w = [A-z] - любая буква (словестный символ)
[A-z0-9_-]+@[A-z\-_0-9]+\.+[a-z]+
[\w\d_-]+@[\w\-_\d]+\.+[\w]+
если в классе остается только 1 элемент, можно не писать [] ([\w] = \w)
"""

"""
Добрый вечер! Меня зовут Василий, моя электронная почта va-sya_1990@yandex.ry, моя рабочая почта Vasya@company-2020.com.
"""

"""
[A-z0-9_-]+@[A-z\-_0-9]+\.+[a-z]+
"""

# с помощью регулярных выражений можно проверять, правильно ли пользователь ввел почту
# те взять текст и выяснить есть ли в нем строчки, кот удв этому регулярному выражению
# если есть, то почта введ правильно, а иначе была ошибка

# можно искать необходимую информацию и делать замены

"""
09/23/2022
"""

"""
нужно найти дату и записать ее в нужном формате
те нужно не только найти дату, но вычлинить из нее некот части строк, а потом расставить их в другом порядке
регулярные выражения работают с символами, а не с числами
[0-9]{2} = цифра (символ) от 0 до 9 повторяется 2 раза (двузначное число)
[0-9]{2}/[0-9]{2}/[0-9]{4}  - находим дату в виде  __/__/____
вытаскиваем из строки некот эл-ты с помощью ()
([0-9]{2})/([0-9]{2})/([0-9]{4})
внутри нашего совпадения проверяются группы, кот в дальнейшем в коде можно будет использовать и переставлять в коде
можем усложнить регулярное выражение 
\d = [0-9] находит все цифры в определ позиции
([0-3]\d)/(\d{2})/(\d{4})
"""

# лучше сначала разрабатывать регулярные выражения разрабатывать на regex101.com и только потом вставлять их в код
# здесь regex101.com можно разобраться как работает то или иное регулярное выражение

"""
специальные символы в регулярных выражениях:
\d - цифра
\D - любой символ, но не цифра
\w - любой словестный символ (буква в любом регистре)
\W - любой не словестный символ
\s - любой пробельный символ: пробел, tab, перенос и тд
\S - не пробельный символ
. - любой символ
+ - от 1 до нескольких символов
{} - точное количество символов
* - от 0 до нескольких символов
(?P<name>...) - группы позволяю твытащить элемент из найденной фразы в отдельную переменную
есть группы кот просто нумеруются, а есть именные группы, в них можно указать имя <name> и вытащить группу по имени
()? - ? после группы означает, что эта группа не обязательно должны быть в строке (Квантификатор ? указывает на одно совпадение или ни одного совпадения)
| = или , строка должна соответствовать хотя бы одному из подзапросов
[abc] - класс символов
[^abc] - символ, кот не принадлежит этому классy
[a-zA-z] разные диапозоны в классах можно просто указывать подряд, таким образом в этот класс попадут больше символов
"""